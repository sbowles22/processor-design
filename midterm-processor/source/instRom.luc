
module instRom (
    input address[8],
    output inst[16]
  ) {

  always {
    inst = c{Inst.NOP, 12b0};

    case (address) {
      // begin: 

      0: inst = c{Inst.SET, 4d1, 8d253};
      1: inst = c{Inst.STORE, 4d1, 4d1, 4d0};
      2: inst = c{Inst.BEQ, 4d1, 8d0};
      3: inst = c{Inst.SET, 4d0, 8d0};
      // lightLED:

      4: inst = c{Inst.SET, 4d2, 8d250};
      5: inst = c{Inst.SET, 4d3, 8d251};
      6: inst = c{Inst.SET, 4d4, 8d252};
      7: inst = c{Inst.STORE, 4d1, 4d2, 4d0};
      8: inst = c{Inst.STORE, 4d1, 4d3, 4d0};
      9: inst = c{Inst.STORE, 4d1, 4d4, 4d0};

    }
  }
}
