module au_plus_top (
    input clk,              // 100MHz clock
    input rst_n,            // reset button (active low)
    output led [8],         // 8 user controllable LEDs
    input usb_rx,
    input usb_tx,           // USB->Serial input
    output io_led [3][8],   // LEDs on IO Shield
    output io_seg [8],      // 7-segment LEDs on IO Shield
    output io_sel [4],      // Digit select on IO Shield
    input io_button [5],    // 5 buttons on IO Shield
    input io_dip [3][8]     // DIP switches on IO Shield
  ) {
  
  sig rst;                  // reset signal
  
 .clk(clk) {
 // The reset conditioner is used to synchronize the reset signal to the FPGA
 // clock. This ensures the entire FPGA comes out of reset at the same time.
 reset_conditioner reset_cond;

 concept concept;
 }

 always {
 reset_cond.in = ~rst_n; // input raw inverted reset signal
 rst = reset_cond.out; // conditioned reset

 led = 8h00; // turn LEDs off


 io_seg = 8hff; // turn segments off
 io_sel = 4hf; // select no digits

 concept.a = io_dip[0];
 concept.b = io_dip[1]; //concept.c = io_dip[2];
 io_led = {concept.e[16+:8], concept.e[8+:8], concept.e[0+:8]};
  }
}